package project3.orderman.invoice.login;

import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author KHIMANIE SIMMONDS
 */
public class customer extends javax.swing.JFrame {

    /**
     * Creates new form customer
     */
    public customer() {
        initComponents();
        table_update();
        invoiceHeader();
    }

    private void invoiceHeader() {
        //Invoice header
        jTextArea.setText("""
                          INVOICE
                          
                          Clothed Under Grace.
                          35 St. John Rd,
                          Spanish Town
                          St. Catherine
                          
                          
                          """);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        itemOrderedLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        billingLabel = new javax.swing.JLabel();
        qntyLabel = new javax.swing.JLabel();
        baseCostLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        notesLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        addressTextField = new javax.swing.JTextField();
        itemTextField = new javax.swing.JTextField();
        qntyTextField = new javax.swing.JTextField();
        billingTextField = new javax.swing.JTextField();
        baseCostTextField = new javax.swing.JTextField();
        dateTextField = new javax.swing.JTextField();
        notesTextField = new javax.swing.JTextField();
        saveBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        statusTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jButton_Invoice = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        searchTextField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        stockTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        countTextField = new javax.swing.JTextField();
        checkBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Customer's Order");

        nameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        nameLabel.setText("Name");

        addressLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addressLabel.setText("Address");

        itemOrderedLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        itemOrderedLabel.setText("Item");

        billingLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        billingLabel.setText("Billing Detials");

        qntyLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        qntyLabel.setText("Quantity");

        baseCostLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        baseCostLabel.setText("Base Cost");

        dateLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        dateLabel.setText("Date");

        notesLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        notesLabel.setText("Notes");

        baseCostTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baseCostTextFieldActionPerformed(evt);
            }
        });

        dateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTextFieldActionPerformed(evt);
            }
        });

        saveBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveBtn.setText("Save");
        saveBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        clearBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        statusLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        statusLabel.setText("Status");

        statusTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusTextFieldActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Name", "Address", "Item", "Billing", "Qty", "Base Cost", "Total Cost", "Date", "Notes", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        updateBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jButton_Invoice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton_Invoice.setText("Print Invoice");
        jButton_Invoice.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Invoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_InvoiceMouseClicked(evt);
            }
        });
        jButton_Invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_InvoiceActionPerformed(evt);
            }
        });

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane2.setViewportView(jTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(addressLabel))
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(qntyLabel)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(65, 65, 65)
                            .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                            .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(itemOrderedLabel)
                                .addComponent(billingLabel)
                                .addComponent(baseCostLabel)
                                .addComponent(dateLabel)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(statusLabel)
                                    .addComponent(notesLabel)))
                            .addGap(41, 41, 41)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(billingTextField)
                                .addComponent(qntyTextField)
                                .addComponent(baseCostTextField)
                                .addComponent(dateTextField)
                                .addComponent(itemTextField)
                                .addComponent(notesTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                                .addComponent(statusTextField)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(jButton_Invoice, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(181, 181, 181)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameLabel))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addressLabel)
                                    .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(itemTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(itemOrderedLabel))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(billingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(billingLabel))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(qntyLabel)
                                    .addComponent(qntyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(baseCostLabel)
                                    .addComponent(baseCostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dateLabel)
                                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(notesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(notesLabel))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusLabel)
                            .addComponent(statusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveBtn)
                            .addComponent(clearBtn))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Invoice, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );

        searchBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Stock Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Stock Count");

        checkBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        checkBtn.setText("Check");
        checkBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkBtn)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stockTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                            .addComponent(countTextField))))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(stockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(countTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkBtn)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void baseCostTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baseCostTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_baseCostTextFieldActionPerformed

    private void dateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTextFieldActionPerformed

    Connection con1;
    PreparedStatement insert;

    private void table_update() {

        int i;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");

            con1 = DriverManager.getConnection("jdbc:mysql://localhost/demo", "root", "");
            insert = con1.prepareStatement("select * from orders");

            ResultSet rs = insert.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            i = Rss.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            Df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();

                for (int a = 1; a <= i; a++) {
                    v2.add(Integer.valueOf(rs.getString("ID")));
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("Address"));
                    v2.add(rs.getString("Item"));
                    v2.add(rs.getString("Payment"));
                    v2.add(Integer.valueOf(rs.getString("Quantity")));
                    v2.add(Float.valueOf(rs.getString("Unit")));
                    v2.add(Float.valueOf(rs.getString("Total")));
                    v2.add(rs.getString("Date"));
                    v2.add(rs.getString("Notes"));
                    v2.add(rs.getString("Status"));
                }

                Df.addRow(v2);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //COMPLETED DO NOT TOUCH!!!
    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:

        String name = nameTextField.getText();
        String address = addressTextField.getText();
        String item = itemTextField.getText();
        String billingInfo = billingTextField.getText();
        int qnty = Integer.parseInt(qntyTextField.getText().trim());
        float baseCost = Float.parseFloat(baseCostTextField.getText().trim());

        float totCost = baseCost * 2;

        String date = dateTextField.getText();
        String notes = notesTextField.getText();
        String status = statusTextField.getText();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");

            con1 = DriverManager.getConnection("jdbc:mysql://localhost/demo", "root", "");
            insert = con1.prepareStatement("insert into orders(Name, Address, Item, Payment, Quantity, Unit, Total, Date, Notes, Status)values(?,?,?,?,?,?,?,?,?,?)");
            insert.setString(1, name);
            insert.setString(2, address);
            insert.setString(3, item);
            insert.setString(4, billingInfo);
            insert.setInt(5, qnty);
            insert.setFloat(6, baseCost);
            insert.setFloat(7, totCost);
            insert.setString(8, date);
            insert.setString(9, notes);
            insert.setString(10, status);

            if (nameTextField.getText().length() <= 0 || addressTextField.getText().length() <= 0 || itemTextField.getText().length() <= 0 || billingTextField.getText().length() <= 0 || qntyTextField.getText().length() <= 0 || baseCostTextField.getText().length() <= 0 || dateTextField.getText().length() <= 0 || notesTextField.getText().length() <= 0 || statusTextField.getText().length() <= 0) {
                JOptionPane.showMessageDialog(this, "Fill out all fields.");
            } else {
                insert.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Added");
                table_update();
            }

            nameTextField.setText("");
            addressTextField.setText("");
            itemTextField.setText("");
            billingTextField.setText("");
            qntyTextField.setText("");
            baseCostTextField.setText("");
            dateTextField.setText("");
            notesTextField.setText("");
            statusTextField.setText("");
            nameTextField.requestFocus();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_saveBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        try {
            int id = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());

            int dialogResult = JOptionPane.showConfirmDialog(null, "DO you want to Delete the Record", "Warning", JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_OPTION) {

                Class.forName("com.mysql.cj.jdbc.Driver");

                con1 = DriverManager.getConnection("jdbc:mysql://localhost/demo", "root", "");
                insert = con1.prepareStatement("delete from orders where  ID=?");

                insert.setInt(1, id);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this, "Record was Successfully Deleted");

                table_update();

                nameTextField.setText("");
                addressTextField.setText("");
                itemTextField.setText("");
                billingTextField.setText("");
                qntyTextField.setText("");
                baseCostTextField.setText("");
                dateTextField.setText("");
                notesTextField.setText("");
                statusTextField.setText("");
                nameTextField.requestFocus();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed
    //COMPLETED DO NOT TOUCH
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        try {

            int id = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());

            String name = nameTextField.getText();
            String address = addressTextField.getText();
            String item = itemTextField.getText();
            String billingInfo = billingTextField.getText();
            int qnty = Integer.parseInt(qntyTextField.getText().trim());
            float baseCost = Float.parseFloat(baseCostTextField.getText().trim());
            float totCost = baseCost * 2;
            String date = dateTextField.getText();
            String notes = notesTextField.getText();
            String status = statusTextField.getText();

            Class.forName("com.mysql.cj.jdbc.Driver");

            con1 = DriverManager.getConnection("jdbc:mysql://localhost/demo", "root", "");
            insert = con1.prepareStatement("update orders set Name=?, Address=?, Item=?, Payment=?, Quantity=?, Unit=?, Total=?, Date=?, Notes=?, Status=? where  ID=?");
            insert.setString(1, name);
            insert.setString(2, address);
            insert.setString(3, item);
            insert.setString(4, billingInfo);
            insert.setInt(5, qnty);
            insert.setFloat(6, baseCost);
            insert.setFloat(7, totCost);
            insert.setString(8, date);
            insert.setString(9, notes);
            insert.setString(10, status);
            insert.setInt(11, id);

            insert.executeUpdate();

            JOptionPane.showMessageDialog(this, "Record Updated");

            table_update();

            nameTextField.setText("");
            addressTextField.setText("");
            itemTextField.setText("");
            billingTextField.setText("");
            qntyTextField.setText("");
            baseCostTextField.setText("");
            dateTextField.setText("");
            notesTextField.setText("");
            statusTextField.setText("");
            nameTextField.requestFocus();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_updateBtnActionPerformed
    //COMPLETED DO NOT TOUCH
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        nameTextField.setText("");
        addressTextField.setText("");
        itemTextField.setText("");
        billingTextField.setText("");
        qntyTextField.setText("");
        baseCostTextField.setText("");
        dateTextField.setText("");
        notesTextField.setText("");
        statusTextField.setText("");
    }//GEN-LAST:event_clearBtnActionPerformed

    //COMPLETED DO NOT TOUCH
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        nameTextField.setText(Df.getValueAt(selectedIndex, 1).toString());
        addressTextField.setText(Df.getValueAt(selectedIndex, 2).toString());
        itemTextField.setText(Df.getValueAt(selectedIndex, 3).toString());
        billingTextField.setText(Df.getValueAt(selectedIndex, 4).toString());
        qntyTextField.setText(Df.getValueAt(selectedIndex, 5).toString());
        baseCostTextField.setText(Df.getValueAt(selectedIndex, 6).toString());
        dateTextField.setText(Df.getValueAt(selectedIndex, 8).toString());
        notesTextField.setText(Df.getValueAt(selectedIndex, 9).toString());
        statusTextField.setText(Df.getValueAt(selectedIndex, 10).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void statusTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusTextFieldActionPerformed

    private void searchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBtnMouseClicked
        // TODO add your handling code here:
        try {

            insert = con1.prepareStatement(" select Name, Address, Item, Payment, Quantity, Unit, Total, Date, Notes, Status from orders where id = ?");

            int id = Integer.parseInt(searchTextField.getText());
            insert.setInt(1, id);
            ResultSet rs = insert.executeQuery();
            if (rs.next() == false) {

                JOptionPane.showMessageDialog(this, "Sorry Record not Found");
                nameTextField.setText("");
                addressTextField.setText("");
                itemTextField.setText("");
                billingTextField.setText("");
                qntyTextField.setText("");
                baseCostTextField.setText("");
                dateTextField.setText("");
                notesTextField.setText("");
                statusTextField.setText("");
                nameTextField.requestFocus();
            } else {
                nameTextField.setText(rs.getString("Name"));
                addressTextField.setText(rs.getString("Address"));
                itemTextField.setText(rs.getString("Item"));
                billingTextField.setText(rs.getString("Payment"));
                qntyTextField.setText(rs.getString("Quantity"));
                baseCostTextField.setText(rs.getString("Unit"));
                dateTextField.setText(rs.getString("Date"));
                notesTextField.setText(rs.getString("Notes"));
                statusTextField.setText(rs.getString("Status"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchBtnMouseClicked

    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        // TODO add your handling code here:
        int stocknum = Integer.parseInt(countTextField.getText());
        String stockname = stockTextField.getText();
        if (stocknum >= 5) {
            JOptionPane.showMessageDialog(this, "Your stock count for" + stockname + " is currently at " + stocknum + " there is enough stock.");
        } else if (stocknum < 5 && stocknum > 0) {
            JOptionPane.showMessageDialog(this, " The item entered is low in stock, please check count and re-order soon.");
        } else {
            JOptionPane.showMessageDialog(this, "ERROR! No stock item can have zero as stock count.");
        }

    }//GEN-LAST:event_checkBtnActionPerformed

 /**
 *
 * @author Rohena Black
 */ 
    private void jButton_InvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_InvoiceActionPerformed
        // TODO add your handling code here:
        
        //Getting customer's information so it can be added to invoice
        String baseCos = baseCostTextField.getText(); //getting unit price from txtfield
        String quanti = qntyTextField.getText(); //getting quantity
        String produc = itemTextField.getText(); //getting product name
        String customerName = nameTextField.getText(); //getting customer name
        String addre = addressTextField.getText(); //getting customers address
        String invoiceDate = dateTextField.getText(); //getting date invoice was made
        String orderStats= statusTextField.getText().toLowerCase(); //getting order status {pending, completed etc)
        
        
        Integer Itemqty=Integer.valueOf(quanti); //converting quantity String to Int
        Float unitPrice=Float.valueOf(baseCos); //Converting Base Cost String to float
        Float orderTot= Itemqty*unitPrice; //calculating order total
        
        String amount= Float.toString(orderTot); //converting order Total (float) to String
        
        //If order is not completed show err Req.3
        if(!orderStats.equals("completed")){
            JOptionPane.showMessageDialog(null, "Can't print invoice for pending/ cancelled orders");
        }
        else{
            //Print invoice for completed orders
            //Code to add customer's order information to Invoice
        jTextArea.setText(jTextArea.getText() + "BILL TO" + "\t" + "\t" + "INVOICE DATE: " + invoiceDate + "\n" + customerName + "\n" + addre + "\n" + "\n");
        jTextArea.setText(jTextArea.getText() + "------------------------------------------------------------------------------" + "\n"
                + "QTY" + "\t" + "ITEM" + "\t" + "UNIT PRICE" + "\t" + "AMOUNT" + "\n"+"------------------------------------------------------------------------------" + "\n"
                + quanti + "\t" + produc + "\t" + baseCos + "\t" + amount + "\n" + "------------------------------------------------------------------------------" +"\n"+"\n" + "\t"+"\t" + "TOTAL" + "\t" + amount + "\n"
                        + "\n"+ "\n" + "\n"+ "\n" +"     If you have questions about this invoice, please contact" + "\n"+ "        +1 876 123-4589 || clothedbygrace@gmail.com"+ "\n"
                        + "                THANK YOU FOR YOUR BUSINESS!");
        try {
            jTextArea.print(); //prints text from jTextArea to pdf etc...
        } catch (Exception e) {

        }
        }
        
        
        
//        //Code to add customer's order information to Invoice
//        jTextArea.setText(jTextArea.getText() + "BILL TO" + "\t" + "\t" + "INVOICE DATE: " + invoiceDate + "\n" + customerName + "\n" + addre + "\n" + "\n");
//        jTextArea.setText(jTextArea.getText() + "------------------------------------------------------------------------------" + "\n"
//                + "QTY" + "\t" + "ITEM" + "\t" + "UNIT PRICE" + "\t" + "AMOUNT" + "\n"+"------------------------------------------------------------------------------" + "\n"
//                + quanti + "\t" + produc + "\t" + baseCos + "\t" + amount + "\n" + "------------------------------------------------------------------------------" +"\n"+"\n" + "\t"+"\t" + "TOTAL" + "\t" + amount + "\n"
//                        + "\n"+ "\n" + "\n"+ "\n" +"     If you have questions about this invoice, please contact" + "\n"+ "        +1 876 123-4589 || clothedbygrace@gmail.com"+ "\n"
//                        + "                THANK YOU FOR YOUR BUSINESS!");
//        try {
//            jTextArea.print(); //prints text from JTextfield to pdf etc...
//        } catch (Exception e) {
//
//        }

    }//GEN-LAST:event_jButton_InvoiceActionPerformed

    private void jButton_InvoiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_InvoiceMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton_InvoiceMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new customer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JLabel baseCostLabel;
    private javax.swing.JTextField baseCostTextField;
    private javax.swing.JLabel billingLabel;
    private javax.swing.JTextField billingTextField;
    private javax.swing.JButton checkBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextField countTextField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel itemOrderedLabel;
    private javax.swing.JTextField itemTextField;
    private javax.swing.JButton jButton_Invoice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JTextField notesTextField;
    private javax.swing.JLabel qntyLabel;
    private javax.swing.JTextField qntyTextField;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextField statusTextField;
    private javax.swing.JTextField stockTextField;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
